import requests
import pandas as pd
import re
import json

InstanceName = ""

url = "https://"+InstanceName+".service-now.com/login.do"

payload = {}
headers = {
    'Content-Type': 'application/json',
    'Accept': 'application/json'
}

response1 = requests.request("GET", url, headers=headers, data=payload)
cookie = response1.cookies
html_content = response1.content.decode('utf-8')

# Find the script tag containing the variable definition
pattern = r"var\s+g_ck\s*=\s*'([^']+)';"
match = re.search(pattern, html_content)
print(match)
# Extract the value of g_ck
if match:
    g_ck_value = match.group(1).replace(" ",'')
    print(g_ck_value)
else:
    print("g_ck not found in the HTML")

if g_ck_value:
    # Define the URL for the API endpoint
    api_url = "https://"+InstanceName+".service-now.com/api/now/sp/widget/widget-simple-list"

    # Read the CSV file
    df = pd.read_csv("sys_db_object.csv", encoding='ISO-8859-1')

    # Iterate through each row in the DataFrame
    for index, row in df.iterrows():
        table_name = row['name']
        processed = row['processed']
        if processed != True:
            print(table_name)
            # Make the API request
            payload = {}
            headers = {
              'X-UserToken': g_ck_value,
              'Content-Type': 'application/json',
              'Accept': 'application/json',              
            }
            url = api_url + f"?t={table_name}"
            print(url)
            print(headers)
            response = requests.request("POST",url, headers=headers, data=payload, cookies=cookie)
            result = response.json()['result']['data']
            print(result)
            # Update the 'result' column with the result
            df.at[index, 'isValid'] = result['isValid']
            if result['isValid'] == True:
                df.at[index, 'listCount'] = len(result['list'])
                if(len(result['list']) > 0):
                    df.at[index, 'result'] = True
                    with open(table_name+".json", 'w') as json_file:
                        json.dump(result, json_file)
                else:
                    df.at[index, 'result'] = False
            else:
                df.at[index, 'listCount'] = 0
                df.at[index, 'result'] = False
            df.at[index, 'processed'] = True
            df.to_csv("sys_db_object.csv", index=False)
